From fe41e6090f2269ad026dd522f3a9fa21fd9ae8ed Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Sun, 16 Oct 2016 01:07:07 +0100
Subject: [PATCH] Support automatic login for LightDM in a stateless
 configuration

This is a modification of the original patch from Michael Terry at
Canonical. It's modified to support a stateless configuration, in the
instance the lightdm.conf file doesn't exist yet.

To support this we use a new control file presence, i.e. /usr/sbin/lightdm.
If we have a config when we start up we'll automatically start a monitor on
it, otherwise we'll set up a monitor the first time we ever write the config
out.

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 src/daemon.c | 168 ++++++++++++++++++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 154 insertions(+), 14 deletions(-)

diff --git a/src/daemon.c b/src/daemon.c
index e62e124..3c87dc2 100644
--- a/src/daemon.c
+++ b/src/daemon.c
@@ -49,6 +49,8 @@
 #define PATH_SHADOW "/etc/shadow"
 #define PATH_GROUP "/etc/group"
 #define PATH_GDM_CUSTOM "/etc/gdm/custom.conf"
+#define PATH_LIGHTDM_CONFIG "/etc/lightdm/lightdm.conf"
+#define LIGHTDM_TEST_FILE "/usr/sbin/lightdm"
 
 enum {
         PROP_0,
@@ -66,6 +68,7 @@ struct DaemonPrivate {
         GFileMonitor *shadow_monitor;
         GFileMonitor *group_monitor;
         GFileMonitor *gdm_monitor;
+        GFileMonitor *lightdm_monitor;
         GFileMonitor *wtmp_monitor;
 
         guint reload_id;
@@ -533,9 +536,20 @@ daemon_init (Daemon *daemon)
                                                     wtmp_helper_get_path_for_monitor (),
                                                     on_users_monitor_changed);
 
-        daemon->priv->gdm_monitor = setup_monitor (daemon,
-                                                   PATH_GDM_CUSTOM,
-                                                   on_gdm_monitor_changed);
+        if (g_file_test ("/etc/gdm", G_FILE_TEST_EXISTS))
+        {
+                daemon->priv->gdm_monitor = setup_monitor (daemon,
+                                                           PATH_GDM_CUSTOM,
+                                                           on_gdm_monitor_changed);
+        }
+
+        if (g_file_test (PATH_LIGHTDM_CONFIG, G_FILE_TEST_EXISTS))
+        {
+                daemon->priv->lightdm_monitor = setup_monitor (daemon,
+                                                           PATH_LIGHTDM_CONFIG,
+                                                           on_gdm_monitor_changed);
+        }
+
         reload_users_timeout (daemon);
         queue_reload_autologin (daemon);
 }
@@ -1268,10 +1282,10 @@ daemon_local_check_auth (Daemon                *daemon,
 }
 
 gboolean
-load_autologin (Daemon      *daemon,
-                gchar      **name,
-                gboolean    *enabled,
-                GError     **error)
+load_autologin_gdm (Daemon      *daemon,
+                    gchar      **name,
+                    gboolean    *enabled,
+                    GError     **error)
 {
         GKeyFile *keyfile;
         GError *local_error;
@@ -1314,23 +1328,90 @@ load_autologin (Daemon      *daemon,
         return TRUE;
 }
 
-static gboolean
-save_autologin (Daemon      *daemon,
-                const gchar *name,
-                gboolean     enabled,
+gboolean
+load_autologin_lightdm (Daemon      *daemon,
+                        gchar      **name,
+                        gboolean    *enabled,
+                        GError     **error)
+{
+        GKeyFile *keyfile;
+
+        keyfile = g_key_file_new ();
+        if (!g_key_file_load_from_file (keyfile,
+                                        PATH_LIGHTDM_CONFIG,
+                                        G_KEY_FILE_KEEP_COMMENTS,
+                                        error)) {
+                g_key_file_free (keyfile);
+                return FALSE;
+        }
+
+        *name = g_key_file_get_string (keyfile, "SeatDefaults", "autologin-user", error);
+        *enabled = (*error == NULL && (*name) && (*name)[0] != 0);
+
+        g_key_file_free (keyfile);
+
+        return (*error == NULL);
+}
+
+gboolean
+load_autologin (Daemon      *daemon,
+                gchar      **name,
+                gboolean    *enabled,
                 GError     **error)
 {
+        GDBusConnection *connection;
+        GVariant *reply;
+
+        /* First, determine whether we should load GDM or LightDM values by
+           checking if GDM is running. */
+        connection = g_bus_get_sync (G_BUS_TYPE_SYSTEM, NULL, NULL);
+        reply = g_dbus_connection_call_sync (connection,
+                                             "org.freedesktop.DBus",
+                                              "/",
+                                              "org.freedesktop.DBus",
+                                              "GetNameOwner",
+                                              g_variant_new ("(s)", "org.gnome.DisplayManager"),
+                                              G_VARIANT_TYPE ("(s)"),
+                                              G_DBUS_CALL_FLAGS_NO_AUTO_START,
+                                              -1,
+                                              NULL,
+                                              NULL);
+        g_object_unref (connection);
+
+        if (reply != NULL) {
+                g_variant_unref (reply);
+                return load_autologin_gdm (daemon, name, enabled, error);
+        } else {
+                return load_autologin_lightdm (daemon, name, enabled, error);
+        }
+}
+
+static gboolean
+save_autologin_gdm (Daemon      *daemon,
+                    const gchar *name,
+                    gboolean     enabled,
+                    GError     **error)
+{
         GKeyFile *keyfile;
         gchar *data;
         gboolean result;
+        GError *local_error = NULL;
+
+        if (!g_file_test ("/etc/gdm", G_FILE_TEST_EXISTS))
+                return TRUE; /* not an error, just not installed */
 
         keyfile = g_key_file_new ();
         if (!g_key_file_load_from_file (keyfile,
                                         PATH_GDM_CUSTOM,
                                         G_KEY_FILE_KEEP_COMMENTS,
-                                        error)) {
-                g_key_file_free (keyfile);
-                return FALSE;
+                                        &local_error)) {
+                /* It's OK for custom.conf to not exist, we will make it */
+                if (!g_error_matches (local_error, G_FILE_ERROR, G_FILE_ERROR_NOENT)) {
+                        g_propagate_error (error, local_error);
+                        g_key_file_free (keyfile);
+                        return FALSE;
+                }
+                g_error_free (local_error);
         }
 
         g_key_file_set_string (keyfile, "daemon", "AutomaticLoginEnable", enabled ? "True" : "False");
@@ -1345,6 +1426,65 @@ save_autologin (Daemon      *daemon,
         return result;
 }
 
+static gboolean
+save_autologin_lightdm (Daemon      *daemon,
+                        const gchar *name,
+                        gboolean     enabled,
+                        GError     **error)
+{
+        GKeyFile *keyfile;
+        gchar *data;
+        gboolean result;
+        GError *local_error = NULL;
+
+        if (!g_file_test (LIGHTDM_TEST_FILE, G_FILE_TEST_EXISTS))
+                return TRUE; /* not an error, just not installed */
+
+        keyfile = g_key_file_new ();
+        if (!g_key_file_load_from_file (keyfile,
+                                        PATH_LIGHTDM_CONFIG,
+                                        G_KEY_FILE_KEEP_COMMENTS,
+                                        &local_error)) {
+                /* It's OK for custom.conf to not exist, we will make it */
+                if (!g_error_matches (local_error, G_FILE_ERROR, G_FILE_ERROR_NOENT)) {
+                        g_propagate_error (error, local_error);
+                        g_key_file_free (keyfile);
+                        return FALSE;
+                }
+                g_error_free (local_error);
+        }
+
+        g_key_file_set_string (keyfile, "SeatDefaults", "autologin-user", enabled ? name : "");
+
+        data = g_key_file_to_data (keyfile, NULL, NULL);
+        result = g_file_set_contents (PATH_LIGHTDM_CONFIG, data, -1, error);
+
+        g_key_file_free (keyfile);
+        g_free (data);
+
+        /* It's possible we just created this file, set up a monitor for it now */
+        if (result && !daemon->priv->lightdm_monitor) {
+                daemon->priv->lightdm_monitor = setup_monitor (daemon,
+                                                       PATH_LIGHTDM_CONFIG,
+                                                       on_gdm_monitor_changed);
+        }
+
+        return result;
+}
+
+static gboolean
+save_autologin (Daemon      *daemon,
+                const gchar *name,
+                gboolean     enabled,
+                GError     **error)
+{
+        if (!save_autologin_gdm (daemon, name, enabled, error))
+                return FALSE;
+        if (!save_autologin_lightdm (daemon, name, enabled, error))
+                return FALSE;
+        return TRUE;
+}
+
 gboolean
 daemon_local_set_automatic_login (Daemon    *daemon,
                                   User      *user,
-- 
2.10.1

