From 1a6bcbcbb984f92d573478ac2bd2432991ee79a4 Mon Sep 17 00:00:00 2001
From: Joey Riches <josephriches@gmail.com>
Date: Wed, 16 Nov 2022 10:36:18 +0000
Subject: [PATCH 1/1] Support automatic login for LightDM in a stateless
 configuration

This is a modification of the original patch from Michael Terry at
Canonical. It's modified to support a stateless configuration, in the
instance the lightdm.conf file doesn't exist yet.

To support this we use a new control file presence, i.e. /usr/sbin/lightdm.
If we have a config when we start up we'll automatically start a monitor on
it, otherwise we'll set up a monitor the first time we ever write the config
out.
---
 src/daemon.c | 155 ++++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 147 insertions(+), 8 deletions(-)

diff --git a/src/daemon.c b/src/daemon.c
index c8b6320..20eab22 100644
--- a/src/daemon.c
+++ b/src/daemon.c
@@ -54,6 +54,8 @@
 #define PATH_PASSWD "/etc/passwd"
 #define PATH_SHADOW "/etc/shadow"
 #define PATH_GROUP "/etc/group"
+#define PATH_LIGHTDM_CONFIG "/etc/lightdm/lightdm.conf"
+#define LIGHTDM_TEST_FILE "/usr/sbin/lightdm"
 
 enum {
         PROP_0,
@@ -73,6 +75,7 @@ typedef struct {
         GFileMonitor *shadow_monitor;
         GFileMonitor *group_monitor;
         GFileMonitor *gdm_monitor;
+        GFileMonitor *lightdm_monitor;
         GFileMonitor *wtmp_monitor;
 
         GQueue *pending_list_cached_users;
@@ -745,9 +748,19 @@ daemon_init (Daemon *daemon)
                                             wtmp_helper_get_path_for_monitor (),
                                             on_users_monitor_changed);
 
-        priv->gdm_monitor = setup_monitor (daemon,
-                                           PATH_GDM_CUSTOM,
-                                           on_gdm_monitor_changed);
+        if (g_file_test ("/etc/gdm", G_FILE_TEST_EXISTS))
+        {
+                priv->gdm_monitor = setup_monitor (daemon,
+                                                   PATH_GDM_CUSTOM,
+                                                   on_gdm_monitor_changed);
+        }
+
+        if (g_file_test (PATH_LIGHTDM_CONFIG, G_FILE_TEST_EXISTS))
+        {
+                priv->lightdm_monitor = setup_monitor (daemon,
+                                                       PATH_LIGHTDM_CONFIG,
+                                                       on_gdm_monitor_changed);
+        }
         reload_users_timeout (daemon);
         queue_reload_autologin (daemon);
 }
@@ -1509,7 +1522,7 @@ daemon_local_check_auth (Daemon                *daemon,
 }
 
 gboolean
-load_autologin (Daemon      *daemon,
+load_autologin_gdm (Daemon      *daemon,
                 gchar      **name,
                 gboolean    *enabled,
                 GError     **error)
@@ -1547,17 +1560,77 @@ load_autologin (Daemon      *daemon,
         return TRUE;
 }
 
-static gboolean
-save_autologin (Daemon      *daemon,
-                const gchar *name,
-                gboolean     enabled,
+gboolean
+load_autologin_lightdm (Daemon      *daemon,
+                        gchar      **name,
+                        gboolean    *enabled,
+                        GError     **error)
+{
+        g_autoptr(GKeyFile) keyfile = NULL;
+
+        keyfile = g_key_file_new ();
+        if (!g_key_file_load_from_file (keyfile,
+                                        PATH_LIGHTDM_CONFIG,
+                                        G_KEY_FILE_KEEP_COMMENTS,
+                                        error)) {
+                return FALSE;
+        }
+
+        *name = g_key_file_get_string (keyfile, "Seat:*", "autologin-user", error);
+        *enabled = (*error == NULL && (*name) && (*name)[0] != 0);
+
+        g_key_file_free (keyfile);
+
+        return (*error == NULL);
+}
+
+gboolean
+load_autologin (Daemon      *daemon,
+                gchar      **name,
+                gboolean    *enabled,
                 GError     **error)
+{
+        GDBusConnection *connection;
+        GVariant *reply;
+
+        /* First, determine whether we should load GDM or LightDM values by
+           checking if GDM is running. */
+        connection = g_bus_get_sync (G_BUS_TYPE_SYSTEM, NULL, NULL);
+        reply = g_dbus_connection_call_sync (connection,
+                                             "org.freedesktop.DBus",
+                                              "/",
+                                              "org.freedesktop.DBus",
+                                              "GetNameOwner",
+                                              g_variant_new ("(s)", "org.gnome.DisplayManager"),
+                                              G_VARIANT_TYPE ("(s)"),
+                                              G_DBUS_CALL_FLAGS_NO_AUTO_START,
+                                              -1,
+                                              NULL,
+                                              NULL);
+        g_object_unref (connection);
+
+        if (reply != NULL) {
+                g_variant_unref (reply);
+                return load_autologin_gdm (daemon, name, enabled, error);
+        } else {
+                return load_autologin_lightdm (daemon, name, enabled, error);
+        }
+}
+
+static gboolean
+save_autologin_gdm (Daemon      *daemon,
+                    const gchar *name,
+                    gboolean     enabled,
+                    GError     **error)
 {
         g_autoptr(GKeyFile) keyfile = NULL;
         g_autofree gchar *data = NULL;
         gboolean result;
         g_autoptr(GError) local_error = NULL;
 
+        if (!g_file_test ("/etc/gdm", G_FILE_TEST_EXISTS))
+                return TRUE; /* not an error, just not installed */
+
         keyfile = g_key_file_new ();
         if (!g_key_file_load_from_file (keyfile,
                                         PATH_GDM_CUSTOM,
@@ -1579,6 +1652,72 @@ save_autologin (Daemon      *daemon,
         return result;
 }
 
+static gboolean
+save_autologin_lightdm (Daemon      *daemon,
+                        const gchar *name,
+                        gboolean     enabled,
+                        GError     **error)
+{
+        GKeyFile *keyfile;
+        gchar *data;
+        gboolean result;
+        GError *local_error = NULL;
+
+        if (!g_file_test (LIGHTDM_TEST_FILE, G_FILE_TEST_EXISTS))
+                return TRUE; /* not an error, just not installed */
+
+        /* Ensure parent directory exists first */
+        if (!g_file_test ("/etc/lightdm", G_FILE_TEST_IS_DIR)) {
+                if (g_mkdir_with_parents("/etc/lightdm", 00755) != 0) {
+                        return FALSE;
+                }
+        }
+
+        keyfile = g_key_file_new ();
+        if (!g_key_file_load_from_file (keyfile,
+                                        PATH_LIGHTDM_CONFIG,
+                                        G_KEY_FILE_KEEP_COMMENTS,
+                                        &local_error)) {
+                /* It's OK for custom.conf to not exist, we will make it */
+                if (!g_error_matches (local_error, G_FILE_ERROR, G_FILE_ERROR_NOENT)) {
+                        g_propagate_error (error, local_error);
+                        g_key_file_free (keyfile);
+                        return FALSE;
+                }
+                g_error_free (local_error);
+        }
+
+        g_key_file_set_string (keyfile, "Seat:*", "autologin-user", enabled ? name : "");
+
+        data = g_key_file_to_data (keyfile, NULL, NULL);
+        result = g_file_set_contents (PATH_LIGHTDM_CONFIG, data, -1, error);
+
+        g_key_file_free (keyfile);
+        g_free (data);
+        DaemonPrivate *priv = daemon_get_instance_private (daemon);
+        /* It's possible we just created this file, set up a monitor for it now */
+        if (result && !priv->lightdm_monitor) {
+                priv->lightdm_monitor = setup_monitor (daemon,
+                                                       PATH_LIGHTDM_CONFIG,
+                                                       on_gdm_monitor_changed);
+        }
+
+        return result;
+}
+
+static gboolean
+save_autologin (Daemon      *daemon,
+                const gchar *name,
+                gboolean     enabled,
+                GError     **error)
+{
+        if (!save_autologin_gdm (daemon, name, enabled, error))
+                return FALSE;
+        if (!save_autologin_lightdm (daemon, name, enabled, error))
+                return FALSE;
+        return TRUE;
+}
+
 gboolean
 daemon_local_set_automatic_login (Daemon    *daemon,
                                   User      *user,
-- 
2.35.5

